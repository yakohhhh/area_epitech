#!/bin/bash

# Pre-commit hook - V√©rifie le code avant chaque commit
# Lance ESLint et les v√©rifications de base

set -e

echo "üîç Pre-commit: V√©rification du code..."

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

print_status() { echo -e "${GREEN}[‚úì]${NC} $1"; }
print_error() { echo -e "${RED}[‚úó]${NC} $1"; }
print_warning() { echo -e "${YELLOW}[!]${NC} $1"; }

STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM)

TS_FILES=$(echo "$STAGED_FILES" | grep -E '\.(ts|tsx|js|jsx)$' || true)

if [ -n "$TS_FILES" ]; then
    print_status "V√©rification ESLint..."
    if echo "$TS_FILES" | grep -q "AREA-Project/front/"; then
        print_status "Linting Frontend..."
        cd AREA-Project/front
        if ! npm run lint 2>/dev/null; then
            print_warning "ESLint a trouv√© des probl√®mes dans le frontend"
            echo "Voulez-vous continuer quand m√™me ? (y/n)"
            read -r response
            if [[ ! "$response" =~ ^[Yy]$ ]]; then
                print_error "Commit annul√©"
                exit 1
            fi
        fi
        cd ../..
    fi

    if echo "$TS_FILES" | grep -q "AREA-Project/back/"; then
        print_status "Linting Backend..."
        cd AREA-Project/back
        if ! npm run lint 2>/dev/null; then
            print_warning "ESLint a trouv√© des probl√®mes dans le backend"
            echo "Voulez-vous continuer quand m√™me ? (y/n)"
            read -r response
            if [[ ! "$response" =~ ^[Yy]$ ]]; then
                print_error "Commit annul√©"
                exit 1
            fi
        fi
        cd ../..
    fi

    if echo "$TS_FILES" | grep -q "AREA-Project/mobile/"; then
        print_status "Linting Mobile..."
        cd AREA-Project/mobile
        if ! npm run lint 2>/dev/null; then
            print_warning "ESLint a trouv√© des probl√®mes dans le mobile"
            echo "Voulez-vous continuer quand m√™me ? (y/n)"
            read -r response
            if [[ ! "$response" =~ ^[Yy]$ ]]; then
                print_error "Commit annul√©"
                exit 1
            fi
        fi
        cd ../..
    fi
fi

print_status "Pre-commit: Toutes les v√©rifications sont OK!"
exit 0
